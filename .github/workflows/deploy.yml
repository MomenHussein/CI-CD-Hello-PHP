name: Deploy Laravel App via SSH

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/laravel-app:latest
  APP_ENV: production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4.2.2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Minikube
      uses: medyagh/setup-minikube@latest
    
    - name: Start Minikube
      run: minikube start

    - name: Remove Git Submodules (if any)
      run: |
        git submodule deinit -f .
        rm -rf .git/modules/*
        git rm -f CI-CD-Hello-PHP || true

    - name: Set lowercase repository name
      id: vars
      run: |
        echo "repo_lower=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

    - name: Set environment variables based on branch
      run: |
        case "${{ github.ref }}" in
          refs/heads/development)
            echo "SERVICE_NAME=development" >> $GITHUB_ENV
            ;;
          refs/heads/master)
            echo "SERVICE_NAME=production" >> $GITHUB_ENV
            ;;
          refs/heads/local)
            echo "SERVICE_NAME=local" >> $GITHUB_ENV
            ;;
        esac
    
    - name: Login to GitHub Container Registry (GHCR)
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install NPM dependencies & build assets
      working-directory: ./laravel
      run: |
        npm install
        npm run build
    
    - name: Build Laravel Docker image
      run: |
        docker build \
          -f laravel/Dockerfile.laravel \
          --build-arg APP_ENV=${{ env.APP_ENV }} \
          -t ghcr.io/${{ steps.vars.outputs.repo_lower }}/laravel-app:latest ./laravel

    - name: Build React Docker image
      run: |
        docker build \
          -f react-app/Dockerfile.react \
          -t ghcr.io/${{ steps.vars.outputs.repo_lower }}/react-app:latest ./react


    - name: Push Laravel image
      run: docker push ghcr.io/${{ steps.vars.outputs.repo_lower }}/laravel-app:latest

    - name: Push React image
      run: docker push ghcr.io/${{ steps.vars.outputs.repo_lower }}/react-app:latest

    - name: Install SSH Client
      run: sudo apt-get install -y openssh-client

    - name: Set up SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy on server
      run: |
        case "${GITHUB_REF}" in
          refs/heads/master)
            echo "DEPLOY_ENV=local" >> $GITHUB_ENV
            ;;
        esac

        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin &&
          docker pull ghcr.io/${{ steps.vars.outputs.repo_lower }}/laravel-app:latest &&
          docker stop app || true &&
          docker rm app || true &&
          docker run -d --name app ghcr.io/${{ steps.vars.outputs.repo_lower }}/laravel-app:latest
        '

    - name: Apply Kubernetes Manifests via SSH
      run: |
          cd k8s &&
          kubectl apply -f configmap.yml &&
          kubectl apply -f deployment.yml &&
          kubectl apply -f service.yml &&
          kubectl apply -f ingress.yml
        
