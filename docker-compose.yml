version: '3.8'

services:
  db:
    image: mysql:8
    container_name: laravel_db
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  laravel:
    build:
      context: ./laravel
      dockerfile: Dockerfile
    container_name: laravel_app
    volumes:
      - ./laravel:/var/www
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - SECRET_KEY=${LARAVEL_SECRET_KEY}

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php_app
    ports:
      - "9000:9000"
    volumes:
      - ./php:/var/www/html
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s
      retries: 3

  react:
    build:
      context: ./react
      dockerfile: Dockerfile
    container_name: react_app
    ports:
      - "3000:3000"
    volumes:
      - ./react:/app
    networks:
      - app-network
    stdin_open: true
    tty: true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - laravel
      - php
      - react
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
